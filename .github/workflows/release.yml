name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Enable Corepack
        run: corepack enable pnpm
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Create Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PULL_REQUESTS }}
  deploy:
    name: Deploy
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.published == 'true'
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ fromJson(needs.release.outputs.publishedPackages).package.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ fromJson(needs.release.outputs.publishedPackages).package.version }}
            type=semver,pattern={{major}},value=${{ fromJson(needs.release.outputs.publishedPackages).package.version }}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
